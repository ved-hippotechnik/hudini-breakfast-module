version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: hudini-postgres
    environment:
      POSTGRES_USER: hudini
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-hudini123}
      POSTGRES_DB: breakfast_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - hudini-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hudini -d breakfast_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: hudini-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - hudini-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Application Server 1
  app1:
    build: .
    container_name: hudini-app1
    environment:
      PORT: 8080
      DATABASE_URL: postgres://hudini:${POSTGRES_PASSWORD:-hudini123}@postgres:5432/breakfast_db?sslmode=disable
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-min-32-chars-long!}
      SERVER_ID: app1
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:8080}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8081:8080"
    networks:
      - hudini-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Application Server 2 (for load balancing demonstration)
  app2:
    build: .
    container_name: hudini-app2
    environment:
      PORT: 8080
      DATABASE_URL: postgres://hudini:${POSTGRES_PASSWORD:-hudini123}@postgres:5432/breakfast_db?sslmode=disable
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-min-32-chars-long!}
      SERVER_ID: app2
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:8080}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8082:8080"
    networks:
      - hudini-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    container_name: hudini-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app1
      - app2
    networks:
      - hudini-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  hudini-network:
    driver: bridge